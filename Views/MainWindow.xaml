<Window x:Class="AI_Knowledge_Generator.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:AI_Knowledge_Generator.Views"
        xmlns:converters="clr-namespace:AI_Knowledge_Generator.Converters"
        mc:Ignorable="d"
        Title="AI Knowledge Generator v1.0" Height="800" Width="900"
        MinHeight="600" MinWidth="700"
        Icon="../Resources/icon_white.ico">

    <Window.Resources>
        <!-- Converters -->
        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <converters:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
        <converters:MultiValueVisibilityConverter x:Key="MultiValueVisibilityConverter"/>

        <Style TargetType="Label">
            <Setter Property="Margin" Value="0,5"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <Style TargetType="Button">
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Margin" Value="5"/>
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.6"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="Padding" Value="5,3"/>
            <Setter Property="Margin" Value="0,5"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>
        <Style TargetType="CheckBox">
            <Setter Property="Margin" Value="0,5,10,5"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>

        <!-- Language item template -->
        <DataTemplate x:Key="LanguageItemTemplate">
            <CheckBox IsChecked="{Binding IsSelected}" Margin="5,2">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding Name}" FontWeight="SemiBold"/>
                    <TextBlock Text="{Binding FileCount, StringFormat=' ({0} files)'}" 
                               Foreground="Gray" FontSize="11" Margin="5,0,0,0"/>
                </StackPanel>
            </CheckBox>
        </DataTemplate>
    </Window.Resources>

    <DockPanel>
        <!-- Status Bar -->
        <StatusBar DockPanel.Dock="Bottom" Height="25">
            <StatusBarItem>
                <TextBlock Text="Ready" x:Name="StatusText"/>
            </StatusBarItem>
            <StatusBarItem HorizontalAlignment="Right">
                <TextBlock Text="{Binding OutputFile, StringFormat='Output: {0}'}" 
                          FontSize="10" Foreground="Gray"/>
            </StatusBarItem>
        </StatusBar>

        <!-- Main Content -->
        <Grid Margin="10">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <!-- Input Directory -->
                <RowDefinition Height="Auto"/>
                <!-- Output File -->
                <RowDefinition Height="Auto"/>
                <!-- Language Detection Header -->
                <RowDefinition Height="Auto"/>
                <!-- Language Checkboxes -->
                <RowDefinition Height="Auto"/>
                <!-- Custom Patterns Header -->
                <RowDefinition Height="Auto"/>
                <!-- Custom Patterns TextBox -->
                <RowDefinition Height="Auto"/>
                <!-- Options -->
                <RowDefinition Height="Auto"/>
                <!-- Generate Button -->
                <RowDefinition Height="*"/>
                <!-- Log Output -->
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="120"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="80"/>
            </Grid.ColumnDefinitions>

            <!-- Input Directory -->
            <Label Grid.Row="0" Grid.Column="0" Content="Input Directory:"/>
            <TextBox Grid.Row="0" Grid.Column="1" 
                     Text="{Binding InputDirectory, UpdateSourceTrigger=PropertyChanged}"
                     ToolTip="Select the directory containing files to aggregate"/>
            <Button Grid.Row="0" Grid.Column="2" Content="Browse..."
                    Command="{Binding BrowseInputCommand}"/>

            <!-- Output File (Read-only) -->
            <Label Grid.Row="1" Grid.Column="0" Content="Output File:"/>
            <TextBox Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2"
                     Text="{Binding OutputFile, Mode=OneWay}"
                     IsReadOnly="True"
                     Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                     ToolTip="The generated markdown file will be saved here"/>

            <!-- Language Detection Section -->
            <StackPanel Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3" 
                        Orientation="Horizontal" Margin="0,15,0,5">
                <Label Content="Detected Languages:" FontWeight="Bold" Margin="0"/>
                <Button Content="Refresh" 
                        Command="{Binding RefreshLanguagesCommand}"
                        Padding="8,2" 
                        FontSize="11"
                        Margin="10,0,0,0"
                        ToolTip="Re-scan directory for languages"/>
                <TextBlock Text="(Uncheck languages to exclude their common ignore patterns)" 
                           VerticalAlignment="Center"
                           Margin="10,0,0,0"
                           FontSize="11"
                           Foreground="Gray"/>
            </StackPanel>

            <!-- Language Checkboxes - FIXED: Border now has only ONE child -->
            <Border Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3"
                    BorderBrush="LightGray" BorderThickness="1"
                    Background="#FAFAFA" 
                    Padding="10"
                    Margin="0,0,0,10">
                <Grid>
                    <!-- Loading indicator -->
                    <TextBlock Text="Detecting languages..." 
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               Foreground="Gray"
                               Visibility="{Binding IsDetectingLanguages, Converter={StaticResource BooleanToVisibilityConverter}}"/>

                    <!-- Content when not detecting - FIXED: Proper visibility logic -->
                    <Grid>
                        <Grid.Style>
                            <Style TargetType="Grid">
                                <Setter Property="Visibility" Value="Visible"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsDetectingLanguages}" Value="True">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>

                        <!-- No languages detected -->
                        <TextBlock Text="No specific languages detected. Select a directory with code files to see language-specific ignore options."
                                   TextWrapping="Wrap"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   Foreground="Gray"
                                   Margin="20">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding DetectedLanguages.Count}" Value="0">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>

                        <!-- Language list -->
                        <ItemsControl ItemsSource="{Binding DetectedLanguages}"
                                      ItemTemplate="{StaticResource LanguageItemTemplate}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel Orientation="Horizontal"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.Style>
                                <Style TargetType="ItemsControl">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding DetectedLanguages.Count}" Value="0">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </DataTrigger>
                                        <Trigger Property="HasItems" Value="True">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ItemsControl.Style>
                        </ItemsControl>
                    </Grid>
                </Grid>
            </Border>

            <!-- Custom Ignore Patterns -->
            <Label Grid.Row="4" Grid.Column="0" Content="Custom Patterns:" VerticalAlignment="Top"/>
            <TextBox Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="3" 
                     Text="{Binding CustomIgnorePatterns, UpdateSourceTrigger=PropertyChanged}"
                     AcceptsReturn="True"
                     TextWrapping="Wrap"
                     VerticalScrollBarVisibility="Auto"
                     Height="80"
                     FontFamily="Consolas" FontSize="11"
                     ToolTip="Enter additional patterns to ignore, one per line. Lines starting with # are comments."/>

            <!-- Options -->
            <StackPanel Grid.Row="6" Grid.Column="0" Grid.ColumnSpan="3" 
                        Orientation="Horizontal" Margin="0,10">
                <CheckBox Content="Use Default Ignores" 
                          IsChecked="{Binding UseDefaultIgnores}"
                          ToolTip="Include common ignore patterns (.git, .vs, LICENSE, etc.)"/>
                <CheckBox Content="Enable Whitespace Removal" 
                          IsChecked="{Binding EnableWhitespaceRemoval}"
                          ToolTip="Remove extra whitespace from files (excludes whitespace-sensitive formats)"/>
            </StackPanel>

            <!-- Generate Button -->
            <Button Grid.Row="7" Grid.Column="1" Content="Generate Markdown"
                    Command="{Binding GenerateCommand}"
                    Background="#007ACC" Foreground="White"
                    FontWeight="Bold" Height="35"
                    ToolTip="Start the file aggregation process"/>

            <!-- Log Output -->
            <Label Grid.Row="8" Grid.Column="0" Content="Log Output:" VerticalAlignment="Top"/>
            <TextBox Grid.Row="8" Grid.Column="0" Grid.ColumnSpan="3"
                     Margin="0,25,0,0" Padding="5"
                     Text="{Binding LogOutput, Mode=OneWay}"
                     IsReadOnly="True"
                     TextWrapping="Wrap"
                     VerticalScrollBarVisibility="Auto"
                     HorizontalScrollBarVisibility="Auto"
                     FontFamily="Consolas" FontSize="12"
                     Background="#F5F5F5"/>
        </Grid>
    </DockPanel>
</Window>